import"./modulepreload-polyfill-3cfb730f.js";const l=10;let r=0,o=null;function a(){return new Promise(e=>{setTimeout(e,0)})}function t(e){const n=document.querySelector("#wrapper");n.innerHTML+=`<p>${e}</p>`,r++}function c(){const e=document.querySelector("#wrapper");e.innerHTML="",r=0}function s(e=200){const n=performance.now();for(console.log(`Synthetic task running for ${e} ms`);performance.now()<n+e;);}function u(e=100){t("Processing validateForm");const n=performance.now();for(;performance.now()<n+e;);}function d(e=100){t("Processing showSpinner");const n=performance.now();for(;performance.now()<n+e;);}function f(e=100){t("Processing saveToDatabase");const n=performance.now();for(;performance.now()<n+e;);}function p(e=100){t("Processing updateUI");const n=performance.now();for(;performance.now()<n+e;);}function m(e=100){t("Processing sendAnalytics");const n=performance.now();for(;performance.now()<n+e;);}const i=[u,d,f,p,m];function w(){o=setInterval(()=>{r<l&&(s(),t("Run blocking task via setInterval"))})}async function k(){for(const e of i)navigator.scheduling.isInputPending()?await a():e(1e3)}async function h(){if(c(),!o){alert("Click the button to run blocking tasks periodically first.");return}for(const e of i)e(),await a()}async function g(){if(c(),!o){alert("Click the button to run blocking tasks periodically first.");return}if(!("scheduler"in window&&"yield"in scheduler)){alert("scheduler.yield isn't available in this browser :(");return}for(const e of i)e(),await scheduler.yield()}function y(){c(),o&&(clearInterval(o),o=null)}function S(e){t(`Input value: '${e.target.value}'`)}function v(){document.querySelector("#start").addEventListener("click",w),document.querySelector("#name").addEventListener("input",S),document.querySelector("#run").addEventListener("click",k),document.querySelector("#clear").addEventListener("click",y),document.querySelector("#setTimeout").addEventListener("click",h),document.querySelector("#scheduler").addEventListener("click",g)}v();
